---
- hosts: all
  become: yes
  gather_facts: yes
  vars:
    data_partition: "/srv"
    create_admin: "true"
    enable_lvm: "true"
  roles:
    - cloud-node
    - postgres-init

  tasks:
    - name: Install supervisor         | Install supervisor 3.4.0
      when: ansible_os_family == 'RedHat'
      pip:
        name: supervisor==3.4.0

    - name: Configure supervisor       | Create a defult configuration file for supervisord
      shell: echo_supervisord_conf > /etc/supervisord.conf

    - name: Modify supervisord.conf
      ini_file:
        dest: /etc/supervisord.conf
        section: include
        option: files
        value: supervisord.d/*.ini

    - name: Modify supervisord.conf
      ini_file:
        dest: /etc/supervisord.conf
        section: unix_http_server
        option: file
        value: /var/run/supervisor/supervisor.sock

    - name: Modify supervisord.conf
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisord
        option: logfile
        value: /var/log/supervisor/supervisord.log

    - name: Modify supervisord.conf
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisord
        option: pidfile
        value: /var/run/supervisord.pid

    - name: Modify supervisord.conf
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisorctl
        option: serverurl
        value: unix:///var/run/supervisor/supervisor.sock

    - name: Configure supervisor        | Create dirs
      file: path={{ item }} state=directory mode='0770'
      with_items:
        - /var/log/supervisor
        - /var/run/supervisor

    - name: Configure supervisor        | Create dirs
      file:
        path: /etc/supervisord.d
        mode: '0755'
        state: directory

    - name: Configure supervisor       | Add /etc/tmpfiles.d/supervisor.conf config
      copy:
        content: |
          D /var/run/supervisor 0775 root root -
        dest: /etc/tmpfiles.d/supervisor.conf
        mode: 0644

    - name: Configure supervisor       | Add logrotate.d config
      copy:
        content: |
          /var/log/supervisor/*.log {
                  missingok
                  weekly
                  notifempty
                  nocompress
          }
        dest: /etc/logrotate.d/supervisor
        mode: 0644

    - name: Configure supervisor       | Add supervisord.service
      copy:
        content: |
          [Unit]
          Description=Process Monitoring and Control Daemon
          After=rc-local.service nss-user-lookup.target
          RequiresMountsFor=/srv

          [Service]
          Type=forking
          ExecStart=/usr/bin/supervisord -c /etc/supervisord.conf

          [Install]
          WantedBy=multi-user.target
        dest: /usr/lib/systemd/system/supervisord.service
        mode: 0644

    - name: supervisor                 | Fix credentials
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisorctl
        option: username
        value: dummy

    - name: supervisor                 | Fix credentials
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisorctl
        option: password
        value: dummy

    - name: Packages                   | Add Nginx repository
      yum_repository:
        name: nginx
        description: nginx repo
        baseurl: http://nginx.org/packages/mainline/centos/7/$basearch/
        gpgcheck: no
        enabled: yes

    - name: PMM                        | Add PMM Server YUM repository
      when: ansible_os_family == 'RedHat'
      yum_repository:
        name: pmm
        description: PMM Server YUM repository - x86_64
        baseurl: https://repo.percona.com/pmm2-components/yum/release/7/RPMS/x86_64/
        gpgcheck: yes
        enabled: no
        gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Percona

    - name: PMM                        | Add PMM Server YUM repository
      when: ansible_os_family == 'RedHat'
      yum_repository:
        name: pmm-testing
        description: PMM Server YUM repository - x86_64
        baseurl: https://repo.percona.com/pmm2-components/yum/testing/7/RPMS/x86_64/
        gpgcheck: yes
        enabled: no
        gpgkey: file:///etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY

    - name: cloud-init                 | Create dirs due to https://github.com/yandex/ClickHouse/pull/3785
      file: path={{ item }} state=directory owner=root
      with_items:
        - /srv/clickhouse

    - name: PMM                        | Add PMM Server YUM repository
      when: ansible_os_family == 'RedHat'
      yum_repository:
        name: pmm-laboratory
        description: PMM Server YUM repository - x86_64
        baseurl: https://repo.percona.com/pmm2-components/yum/laboratory/7/RPMS/x86_64/
        gpgcheck: yes
        enabled: no
        gpgkey: file:///etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY

    - name: PMM                        | Install RPMs
      when: ansible_os_family == 'RedHat'
      yum:
        name:
          - nginx-1.15.8
          - percona-grafana
          - percona-prometheus
          - percona-qan-api2
          - percona-qan-app
          - percona-dashboards
          - pmm-server
          - pmm-manage
          - pmm-managed
          - pmm-update
          - rds_exporter
          - percona-clickhouse-client
          - percona-clickhouse-server
          - pmm2-client
          - unzip
        state: installed
        enablerepo: "pmm-laboratory"

    - name: PMM                        | Prometheus METRICS_RETENTION
      command: sh -c 'sed -i "s/ENV_METRICS_RETENTION/${METRICS_RETENTION:-720h}/" /etc/supervisord.d/pmm.ini'

    - name: PMM                        | Disable clickhouse-server in systemd
      service: name=clickhouse-server state=stopped enabled=no

    - name: PMM                        | Disable crond
      service: name=crond state=stopped enabled=no

    - name: PMM                        | Disable pmm-agent
      service: name=pmm-agent state=stopped enabled=no

    - name: Remove supervisord block
      ini_file:
        path: /etc/supervisord.d/pmm.ini
        section: supervisord
        state: absent

    - name: Disable SELinux
      selinux:
        policy: targeted
        state: permissive

    - name: NGINX SSL Certificate      | Add script
      copy:
        content: |
          #!/bin/sh

          set -o errexit

          mkdir -p /srv/nginx

          if [ ! -e /srv/nginx/dhparam.pem ]; then
              openssl dhparam -out /srv/nginx/dhparam.pem 2048
          fi

          if [ ! -e /srv/nginx/ca-certs.pem ]; then
              # Fetch letsencrypt chain
              curl https://letsencrypt.org/certs/isrgrootx1.pem                          > /srv/nginx/ca-certs.pem
              curl https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.pem       >> /srv/nginx/ca-certs.pem
              curl https://letsencrypt.org/certs/letsencryptauthorityx1.pem             >> /srv/nginx/ca-certs.pem
              curl https://www.identrust.com/certificates/trustid/root-download-x3.html >> /srv/nginx/ca-certs.pem
          fi

          if [ ! -e /srv/nginx/certificate.conf ]; then
              echo "
          [ req ]
          distinguished_name = req_distinguished_name
          prompt             = no

          [ req_distinguished_name ]
          O                  = Main Org.
          " > /srv/nginx/certificate.conf
          fi

          if [ ! -e /srv/nginx/certificate.key -o ! -e /srv/nginx/certificate.crt ]; then
              openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
                  -keyout /srv/nginx/certificate.key \
                  -out    /srv/nginx/certificate.crt \
                  -config /srv/nginx/certificate.conf
          fi
        dest: /var/lib/cloud/scripts/per-boot/generate-ssl-certificate
        mode: 0755

    - name: NGINX SSL Certificate      | Check certificate file
      stat: path=/srv/nginx/certificate.crt
      register: certificate_file

    - name: NGINX SSL Certificate      | Generate certificate
      when: not certificate_file.stat.exists
      command: /var/lib/cloud/scripts/per-boot/generate-ssl-certificate

    - name: Grafana                    | Check data dir
      stat: path=/srv/grafana/grafana.db
      register: grafana_db

    - name: PMM                        | Fix path to grafana.db
      command: sh -c 'sed -i "s|/var/lib/grafana/grafana.db|/srv/grafana/grafana.db|" /etc/supervisord.d/pmm.ini'

    - name: Grafana                    | Disable Anonymous access
      when: not grafana_db.stat.exists
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: auth.anonymous
        option: enabled
        value: 'false'

    - name: Grafana                    | Set snapshot server
      when: not grafana_db.stat.exists
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_enabled
        value: 'true'

    - name: Grafana                    | Set snapshot server
      when: not grafana_db.stat.exists
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_snapshot_url
        value: https://snapshots-g504.percona.com

    - name: Grafana                    | Set snapshot server
      when: not grafana_db.stat.exists
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_snapshot_name
        value: Share with Percona

    - name: PMM                     | Create pmm  user
      user:
        name: pmm
        comment: John Doe

    - name: cloud-init                 | Create dirs
      file: path={{ item }} state=directory owner=pmm
      with_items:
        - /srv/prometheus/data
        - /srv/logs

    - name: Grafana                    | Enable gzip
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: server
        option: enable_gzip
        value: 'true'

    - name: Postgres                   | Create Postgres log file
      copy:
        content: ""
        dest: /srv/logs/postgres.log
        force: no
        group: postgres
        owner: postgres
        mode: 0644

    - name: PMM                        | Start services
      service: name=supervisord state=started enabled=yes

    - name: PMM                        | Wait for postgres start
      wait_for:
        port: 5432
        state: present
        delay: 30
        timeout: 60

    - name: pmm-managed                | Create PostgreSQL database
      postgresql_db:
        name: pmm-managed
        state: present

    - name: pmm-managed                | Create PostgreSQL user
      postgresql_user:
        db: pmm-managed
        name: pmm-managed
        password: 'md5da757ec3e22c6d86a2bb8e70307fa937'
        priv: 'ALL'
        expires: infinity
        state: present

    - name: pmm-managed                | Create pg_stat_statements PostgreSQL extension
      postgresql_ext:
        db: pmm-managed
        name: pg_stat_statements

    - name: PMM                        | Wait for Grafana start
      wait_for:
        port: 3000
        state: present
        delay: 30
        timeout: 60

    - name: PMM                        | Add firewalld rule
      when: ansible_os_family == 'RedHat'
      firewalld: port={{ item }} permanent=true state=enabled immediate=yes
      with_items:
          - 80/tcp
          - 443/tcp

    - name: PMM                        | Wait for dashboards
      wait_for:
        path: /srv/grafana/PERCONA_DASHBOARDS_VERSION
        state: present

    - name: Grafana                    | Add community panels
      unarchive:
        src: "{{ item }}"
        dest: /var/lib/grafana/plugins
        remote_src: yes
      with_fileglob:
        - "/usr/share/percona-dashboards/panels/*.zip"

    - name: PMM                        | Create dirs
      file: path={{ item }} state=directory owner=root group=pmm
      with_items:
        - /srv/clickhouse

    - name: PMM                        | Create ClickHouse database
      command: clickhouse-client --host 127.0.0.1 --query="CREATE DATABASE IF NOT EXISTS pmm"

    - name: PMM                        | Show ClickHouse database
      command: clickhouse-client --host 127.0.0.1 --query="SHOW DATABASES"

    - name: PMM                        | Add script which show PMM URL
      copy:
        content: |
          #!/bin/sh

          set -o errexit

          PATH=/bin:/sbin

          SOURCE=$(
              cat /var/lib/cloud/data/status.json 2>/dev/null \
                  | python -c 'import json, sys; print json.load(sys.stdin)["v1"]["datasource"];' 2>/dev/null
          )

          IP=$(ip route get 1 2>/dev/null | awk '{print $NF;exit}')
          if [ "x$SOURCE" = "xDataSourceEc2" ]; then
              IP=$(curl --connect-timeout 5 -s http://169.254.169.254/latest/meta-data/public-ipv4)
          fi
          if [ -z "$IP" ]; then
              IP=$(ip addr show up | grep 'inet ' | awk '{print$2}' | cut -d '/' -f 1 | grep -v '^127.')
          fi

          echo "

          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                Percona Monitoring and Management           https://${IP}/

          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          " | tee -a /dev/tty0
        dest: /var/lib/cloud/scripts/per-boot/show-pmm-url
        mode: 0755

    - name: PMM                        | Create pmm-update dirs
      file: path={{ item }} state=directory
      with_items:
        - /srv/update

    - name: PMM                        | Check pmm-update
      stat: path=/srv/update/main.yml
      register: pmm_update_file

    - name: PMM                        | Enable testing repo for pmm2-client
      when: not pmm_update_file.stat.exists
      command: percona-release enable tools testing

    - name: PMM                        | Run pmm-update
      when: not pmm_update_file.stat.exists
      command: env EXTRA_ARGS='--extra-vars image_creation=1 --extra-vars keep_centos_user=1' /usr/bin/pmm-update-stage2

    - name: PMM                        | Disable testing repo for pmm2-client
      when: not pmm_update_file.stat.exists
      command: percona-release disable tools testing

    - name: PMM                        | Create tmp dirs
      command: /usr/bin/systemd-tmpfiles --create --remove --boot --exclude-prefix=/dev

    - name: PMM                        | Setup pmm-agent
      command: >
        pmm-agent setup
        --config-file=/usr/local/percona/pmm-agent.yaml
        --skip-registration
        --id=pmm-server
        --server-address=127.0.0.1:443
        --server-insecure-tls

    - name: PMM                        | Find the main js file
      find:
        paths: "/usr/share/pmm-server/password-page"
        patterns: "main.*.js"
      register: jsresult

    - name: PMM                        | Switch password-page type
      when: ansible_virtualization_type == "virtualbox"
      replace:
        dest: "{{ jsresult.files[0].path }}"
        regexp: "installationType: 'docker'"
        replace: "installationType: 'ovf'"
      with_items: "{{ jsresult.files }}"

    - name: PMM                        | Switch password-page type
      when: ansible_virtualization_type == "xen"
      replace:
        dest: "{{ jsresult.files[0].path }}"
        regexp: "installationType: 'docker'"
        replace: "installationType: 'ami'"
      with_items: "{{ jsresult.files }}"

    - name: PMM                        | Delete centos
      shell: cd /tmp; nohup sh -c "trap 'userdel -r centos' EXIT; sleep 600" </dev/null >/dev/null 2>&1 &

    - name: PMM                        | Delete vagrant
      shell: cd /tmp; nohup sh -c "trap 'userdel -r vagrant' EXIT; sleep 600" </dev/null >/dev/null 2>&1 &

    - name: PMM                        | Delete Azure user
      shell: cd /tmp; nohup sh -c "trap '/usr/sbin/waagent -force -deprovision+user && sync' EXIT; sleep 600" </dev/null >/dev/null 2>&1 &

    - name: PMM                        | Stop services
      service: name=supervisord state=stopped enabled=yes

    - name: cloud-init                 | Cleanup security logs
      file: path={{ item }} state=absent
      with_items:
        - /var/log/secure
        - /var/log/wtmp
